cache:
  key: "$CI_BUILD_REF_NAME node:8-alpine"
  paths:
  - node_modules/
stages:
  # - build
  # - test
  - release
  - deploy
# build:
#   stage: build
#   image: node:8-alpine
#   variables:
#     NODE_ENV: "development"
#   before_script:
#     - apk add --update bash
#     - apk add --update git && rm -rf /tmp/* /var/cache/apk/*
#     - npm install
#   script:
#     - npm run build
#   artifacts:
#     paths:
#      - server/
#      - public/

# test:
#   stage: test
#   image: node:8-alpine
#   variables:
#     DATABASE_TEST_URL: "mongodb://mongo/dbname"
#     NODE_ENV: "test"
#   services:
#     - mongo
#   script:
#     - npm run mocha

release:
  stage: release
  image: docker:latest
  only:
    - "master"
  services:
    - docker:dind
  before_script:
    - docker version
    - "docker info"
    - "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
  script:
    - "docker build -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest --pull ."
    - "docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest"
  after_script:
    - "docker logout ${CI_REGISTRY}"

deploy:
  stage: deploy
  image: gitlab/dind:latest
  only:
    - "master"
  environment: production 
  services:
    - docker:dind:latest
  before_script:
   - apt-get update -y && apt-get install sshpass
  script:
    - sudo chmod +x ./deploy.sh
    - ./deploy.sh $DEPLOYMENT_SERVER_PASS $DEPLOYMENT_SERVER_USER $DEPLOYMENT_SERVER_IP $CI_REGISTRY_USER $CI_REGISTRY_PASSWORD $CI_REGISTRY $CI_PROJECT_PATH